<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:sqs="http://www.mulesoft.org/schema/mule/sqs"
	xmlns:amqp="http://www.mulesoft.org/schema/mule/amqp"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/amqp http://www.mulesoft.org/schema/mule/amqp/current/mule-amqp.xsd
http://www.mulesoft.org/schema/mule/sqs http://www.mulesoft.org/schema/mule/sqs/current/mule-sqs.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd">

	
	<flow name="order-extract-trigger-flow" doc:id="23a2590d-f562-46da-a911-2cf2098e8abe">
		<scheduler doc:name="Scheduler" doc:id="18363b90-3733-44b8-b930-913a1be28952" >
			<scheduling-strategy >
				<cron expression="${cron.expression.orderextract}" />
			</scheduling-strategy>
		</scheduler>
		<ee:transform doc:name="Batch Parameter" doc:id="02821f9f-729a-4648-b997-59abceff4329" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'order-extract-trigger-flow']]></ee:set-variable>
				<ee:set-variable variableName="count" ><![CDATA[0]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Log Receiver Entry" doc:id="77d62498-8cc7-4855-9310-c8fd5c7897f0" name="log-receiver-entry-sub-flow" />
		<flow-ref doc:name="Audit Receiver Entry" doc:id="bae2eaf2-a4d8-4332-b476-870c31df3ae1" name="audit-receiver-entry-sub-flow"/>
		<flow-ref doc:name="call-s-jda-and-process-to-d365-impl-flow" doc:id="cc7dd770-911a-4451-8cc8-59819183625b" name="call-s-jda-and-process-to-d365-impl-flow"/>
		<ee:transform doc:name="set Flow Name" doc:id="10072e90-91ae-4efa-a37f-7c69bc1d2a8d" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'order-extract-trigger-flow']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Log Dispatcher Exit" doc:id="986bce07-fd29-46df-a2b5-8f370e86bb0f" name="log-dispatcher-exit-sub-flow"/>
		<flow-ref doc:name="Audit Dispatcher Exit" doc:id="bec990dc-8b03-4813-955c-422c63eecb9f" name="audit-dispatcher-exit-sub-flow"/>
	</flow>
	<flow name="call-s-jda-and-process-to-d365-impl-flow" doc:id="586a59a6-47ab-44e1-b530-8afc050bbc93" >
		<ee:transform doc:name="Flow Name" doc:id="c245b3ff-0f13-4be7-aecc-589ea8c46bfa" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'call-s-jda-and-process-to-d365-impl-flow']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Log Process Entry" doc:id="cfce3e1e-0396-429e-8d85-cd27a2e4708c" name="log-process-entry-sub-flow"/>
		<flow-ref doc:name="Audit Process Entry" doc:id="dd1639ad-1b7e-4735-adc4-fd1d81d79b31" name="audit-process-entry-sub-flow"/>
		<flow-ref doc:name="call s-jda http request sub flow" doc:id="778b7a3f-34e6-4509-978e-c271aaae1c8b" name="call-s-jda-http-request-sub-flow" />
		<ee:transform doc:name="JDA Response Attribute" doc:id="fff130b5-a416-459f-b85d-19789aadfe9c">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="hasMoreFiles"><![CDATA[attributes.headers['has-more-files']]]></ee:set-variable>
				<ee:set-variable variableName="fileName" ><![CDATA[attributes.headers['file-name']]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="1d575d75-492e-4e7c-b28d-dd96cbf8a864" >
			<when expression="#[payload != null and isEmpty(payload.orders) != true]">
				<flow-ref doc:name="Flow Reference to Order Extract Check Manifest Data" doc:id="c1d2c83f-4e82-4c91-8100-9d093f42b861" name="order-extract-check-manifest-data-sub-flow"/>
			</when>
			<otherwise>
				<set-variable value="There are no order data to process" doc:name="Set Logging Payload" doc:id="d851938f-e129-41c0-b5ed-4ae9205905ab" variableName="loggingPayload" />
				<flow-ref doc:name="Log Warn Sub Flow" doc:id="12acbf38-f6ce-4203-ac75-b499b5b35fa4" name="log-process-warn-sub-flow"/>
				<flow-ref doc:name="Audit Warn Sub Flow" doc:id="c152a888-b278-4f68-90b2-7fd613f34033" name="audit-warning-sub-flow"/>
			</otherwise>
		</choice>
		<choice doc:name="Choice" doc:id="0af6e8e1-cb61-4991-854f-f88169c6946a">
			<when expression="#[vars.hasMoreFiles]">
				<flow-ref doc:name="call-s-jda-and-process-to-d365-impl-flow" doc:id="9aee2451-507f-4599-ba8f-86835f0b407e" name="call-s-jda-and-process-to-d365-impl-flow" />
			</when>
			<otherwise>
				<set-variable value="No Order Extract Files Available " doc:name="Set Logging Payload" doc:id="cca705f5-3f2e-4eda-8876-505b9cb4fc35" variableName="loggingPayload" />
				<flow-ref doc:name="Log Warn Sub Flow" doc:id="2f4ea948-7ce7-483e-ac6b-dd9e72a7252c" name="log-process-warn-sub-flow"/>
				<flow-ref doc:name="Audit Warn Sub Flow" doc:id="85b94c6e-dcea-40dd-a9ab-863abfe8abf1" name="audit-warning-sub-flow"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="Flow Name" doc:id="dbfd5dbb-0b61-47fe-863b-f1f4cc0e02dc" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'call-s-jda-and-process-to-d365-impl-flow']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Log Process Exit" doc:id="aae4a445-5cdd-47c0-9e92-3bf3f64a35c9" name="log-process-exit-sub-flow" />
<flow-ref doc:name="Audit Process Exit" doc:id="bbc8cc84-815f-4e90-98f7-2b626dabca2c" name="audit-process-exit-sub-flow"/>
	</flow>
	<sub-flow name="order-extract-check-manifest-data-sub-flow" doc:id="e36f7652-4cb0-405b-afd5-1d5835291f83" >
		<ee:transform doc:name="Flow Name" doc:id="2fb85c39-71f1-4fdc-a4dc-fc939f6162e9" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'order-extract-check-manifest-data-sub-flow']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Log Process Entry" doc:id="94382069-708b-48c5-935a-88f61bb3146d" name="log-process-entry-sub-flow"/>
		<flow-ref doc:name="Audit Process Entry" doc:id="92f959bc-7a2d-4821-a0b6-76a811408f29" name="audit-process-entry-sub-flow"/>
		<ee:transform doc:name="Filtering" doc:id="3a23d39e-deaf-4e03-ab52-a34254baa3a7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
fun checkData(data) = data.orderlines filter ($.quantity != $."ordered-quantity")
---
{
	orders: payload.orders filter ($."order-no" != null and $."order-no" != '' and $.status == 'Shipped' and isEmpty(checkData($)) == false) map $  
} ]]></ee:set-payload>
			</ee:message>
			<ee:variables >
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="c72d933e-7050-4325-8357-b152854dfac2">
			<when expression="#[isEmpty(payload.orders) != true]">
				<flow-ref doc:name="Flow Reference Get Manifest Data" doc:id="428e84de-f365-4349-9386-e92167cbf7b8" name="order-extract-get-manifest-data"/>
			</when>
			<otherwise>
				<set-variable value="Order file doesn't have any valid order" doc:name="Set Logging payload" doc:id="aace8a5b-63c6-4cb2-ade2-0323bb3f144b" variableName="loggingPayload" />
				<flow-ref doc:name="logging-sub-flow" doc:id="0129c8b1-0277-4b24-ba27-31b4b8523b08" name="logging-sub-flow"/>
				<flow-ref doc:name="Log Warn Sub Flow" doc:id="95a6a3de-d35f-4e7e-943f-01591f2f99e7" name="log-process-warn-sub-flow" />
				<flow-ref doc:name="Audit Warn Sub Flow" doc:id="b3ce2b11-4c5e-4321-887b-6868cd5c63a9" name="audit-warning-sub-flow"/>
			</otherwise>
			
		</choice>
		<ee:transform doc:name="Flow Name" doc:id="69ca6889-fa61-4c7b-9a11-0fe5df2f5f70" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'order-extract-check-manifest-data-sub-flow']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Audit Process Exit" doc:id="4c364dc0-08ed-481a-9f19-af4b2c7199fd" name="audit-process-exit-sub-flow"/>
		<flow-ref doc:name="Log Process Exit" doc:id="fe6b147b-5e9e-4f0d-91b6-ec15fb933b60" name="log-process-exit-sub-flow"/>
	</sub-flow>
	
	<sub-flow name="order-extract-get-manifest-data" doc:id="fb474105-bef1-40e7-834f-e728f8fb1d7a" >
		<ee:transform doc:name="Flow Name" doc:id="840b0cee-d408-4dc1-8ac5-d6db5b0b99ce" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'order-extract-get-manifest-data']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Log Process Entry" doc:id="ad500094-a464-4579-b726-34dd567c0620" name="log-process-entry-sub-flow"/>
		<flow-ref doc:name="Audit Process Entry" doc:id="fe5ba2d5-3930-4c69-a8e3-c9011ea4be1a" name="audit-process-entry-sub-flow"/>
		<set-variable value="#[payload]" doc:name="Set order data to variable" doc:id="57665150-d14c-4c13-b611-4774d2a582f7" variableName="orderPayload"/>
		<until-successful maxRetries="${retry.attempts}" doc:name="Until Successful" doc:id="e64220aa-9f7b-4e1e-b7a5-b1559887637b" millisBetweenRetries="${retry.frequency}">
			<try doc:name="Try" doc:id="0d7b484d-d1c2-44d6-880c-42e39947f6ca">
			<sqs:read doc:name="Read" doc:id="330242a6-79a7-46cc-a776-f3c63859a336" config-ref="Amazon_SQS_Configuration" queueUrl="#[p('sqs.queue.url.manifestQueueUrl')]" maxNumberOfMessages="#[6]">
			<reconnect frequency="${retry.frequency}" count="${retry.attempts}" />
		</sqs:read>
			<error-handler>
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="d08ff4f6-860f-473f-863b-c8f04cd078ac" type="ANY">
					<flow-ref doc:name="log-error-sub-flow" doc:id="579d2be6-3bce-4e25-a3ef-89fe63d9e84f" name="log-error-sub-flow" />
					<flow-ref doc:name="audit-error-sub-flow" doc:id="6120a465-6f6a-4f41-aaf8-c4b04f4c4301" name="audit-error-sub-flow" />
				</on-error-propagate>
			</error-handler>
		</try>
		</until-successful>
		<flow-ref doc:name="Audit Process Exit" doc:id="9971effb-f88d-4b84-8a87-8b21c24c7814" name="audit-process-exit-sub-flow" />
		<flow-ref doc:name="Log Process Exit" doc:id="1884a941-55c9-4a4a-a2df-a6d4b43e3479" name="log-process-exit-sub-flow" />
<!-- 		<logger level="INFO" doc:name="Logger" doc:id="82db6798-e471-477b-a429-2a8e3f0c124e" message="#[payload[0].body]" /> -->
		<set-variable value="#[payload[0].body]" doc:name="Set Variable" doc:id="f4fcd1be-b995-4244-89cc-745e07423dc6" variableName="manifestData"/>
		<set-payload value="#[vars.orderPayload]" doc:name="Set Payload" doc:id="a7fbc890-2d04-4b9d-b03e-693c16f4ac1d" />
		<flow-ref doc:name="Log Process Entry" doc:id="34234a12-8ea6-48ae-b95a-c9910499db61" name="log-process-entry-sub-flow"/>
<flow-ref doc:name="Audit Process Entry" doc:id="174bbd47-bd0d-4f2f-9ae6-d0022bd32fea" name="audit-process-entry-sub-flow"/>
		<choice doc:name="Choice" doc:id="e84144a6-44ff-4e08-8268-7ba143b34c0d" >
			<when expression="#[vars.manifestData != null and isEmpty(vars.manifestData) != true]">
				<ee:transform doc:name="Read Manifest Data" doc:id="e5083270-266b-4ad8-a1e2-98e4dcf7828d">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="manifestData" ><![CDATA[%dw 2.0
output application/json
---
read(vars.manifestData,'application/json')]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<ee:transform doc:name="Filtering Order Data based on Manifest Data" doc:id="a97d5f0c-3a47-45ae-9428-b2152ff8adca" >
					<ee:message >
						<ee:set-payload resource="dwl/filteredOrder.dwl" />
					</ee:message>
					<ee:variables >
						<ee:set-variable resource="dwl/matchedOrderData.dwl" variableName="matchedOrderData" />
					</ee:variables>
				</ee:transform>
<!-- 				<logger level="INFO" doc:name="Logger" doc:id="2ae8566d-23b3-4672-8909-6741d4f01bf9" message="#['Filtered Order Data : '++ write(payload,'application/json')]" /> -->
				<async doc:name="Async" doc:id="7dfad758-7b2d-4c7c-9582-8dedf46761a5" >
					<flow-ref doc:name="Matched Data Handling Flow Call" doc:id="bf8f815a-730d-42fe-b29d-f3eae1903a6e" name="order-extract-matched-data-handling-flow" />
				</async>
			</when>
			<otherwise >
				<set-variable value="Queue doesn't have any data" doc:name="Set Logging payload" doc:id="73320de0-0bc3-4493-8fe6-27cb1e9777fb" variableName="loggingPayload" />
				<flow-ref doc:name="Logging Message" doc:id="648243e9-2db8-4a80-9518-de124bcc936c" name="logging-sub-flow" />
			</otherwise>
		</choice>
		<ee:transform doc:name="Transform order extract To D365" doc:id="4475089e-4483-4d0f-998d-02f9a670bb78">
			<ee:message>
				<ee:set-payload resource="dwl/order-extract-jda-to-d365-mapping.dwl" />
			</ee:message>
		</ee:transform>
<!-- 		<logger level="INFO" doc:name="Logger" doc:id="73b59a37-7b74-4a6c-a420-32ac29ff5d65" message="#['Data sending to D365' ++ write(payload, &quot;application/json&quot;)]" /> -->
		<flow-ref doc:name="Flow Reference send to d365" doc:id="9691c83f-6d2f-480d-b302-4adb884962ed" name="order-extract-send-to-d365" />
		<ee:transform doc:name="Flow Name" doc:id="0493d774-b8ff-498e-a3d7-f541b3d09210" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'order-extract-get-manifest-data']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Audit Process Exit" doc:id="eeaf5f15-ab44-461f-b5ea-1a7e7224af56" name="audit-process-exit-sub-flow"/>
		<flow-ref doc:name="Log Process Exit" doc:id="f529bc55-ce3d-4900-a866-36c15af7d0c3" name="log-process-exit-sub-flow"/>
	</sub-flow>
	
	<flow name="order-extract-matched-data-handling-flow" doc:id="66da516c-90ed-4f20-b12d-f0e765062f26" >
		<ee:transform doc:name="Flow Name" doc:id="0e82d5ef-62b1-442d-b829-8e9645d9926f" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'order-extract-matched-data-handling-flow']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Log Process Entry" doc:id="92e7d252-c033-4e7c-a77b-9c57d60c7daf" name="log-process-entry-sub-flow"/>
<flow-ref doc:name="Audit Process Entry" doc:id="6f5519a0-6e6f-4050-9b7f-66d1b999e4ee" name="audit-process-entry-sub-flow"/>
		<choice doc:name="Choice" doc:id="2ae17774-f257-46a2-9eeb-bac9266de16a" >
			<when expression="#[vars.matchedOrderData != null and isEmpty(vars.matchedOrderData.orders) != true]">
<!-- 				<logger level="INFO" doc:name="Logger" doc:id="8dbaabd3-a975-44d0-bb3a-0e756481567b" message="#['Matched Data is: ' ++ write(vars.matchedOrderData,'application/json')]"/> -->
				<set-variable value="#[payload]" doc:name="Set Original Payload" doc:id="9f683db3-6cb2-4755-b506-d38a1b00cf8c" variableName="originalPayload" />
				<ee:transform doc:name="Transform Message" doc:id="740e7811-0be4-49a1-940c-ac86c580843e" >
					<ee:message >
						<ee:set-payload resource="dwl/create-order-queue-msg.dwl" />
					</ee:message>
				</ee:transform>
				<flow-ref doc:name="Log Process Entry" doc:id="e6eb0d01-5369-4e07-b6a7-a14f315becd6" name="log-process-entry-sub-flow"/>
				<flow-ref doc:name="Audit Process Entry" doc:id="e704e306-dfbd-429c-9aa5-048ca71351d4" name="audit-process-entry-sub-flow"/>
				<until-successful maxRetries="${retry.attempts}" doc:name="Until Successful" doc:id="7bc55cdb-8ddb-4960-b7ff-73f14373deeb" millisBetweenRetries="${retry.frequency}">
					<try doc:name="Try" doc:id="7560c63b-f189-457b-8ae9-d9374078cb10" >
						<sqs:send-message doc:name="Send message" doc:id="15584991-45a1-4e66-929b-46e61368304d" config-ref="Amazon_SQS_Configuration" queueUrl="${sqs.queue.url.orderQueueUrl}">
					<reconnect frequency="${retry.frequency}" count="${retry.attempts}" />
				</sqs:send-message>
						<error-handler >
							<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="a2e3f3e7-33e5-45bf-bcad-7ff870332a47" type="ANY">
								<flow-ref doc:name="log-error-sub-flow" doc:id="cd577cdf-c02a-455d-8957-aabee11b3559" name="log-error-sub-flow"/>
								<flow-ref doc:name="audit-error-sub-flow" doc:id="55d06d25-41c1-4dbb-b60e-779639af20e3" name="audit-error-sub-flow"/>
							</on-error-propagate>
						</error-handler>
					</try>
				</until-successful>
				<flow-ref doc:name="Audit Process Exit" doc:id="baf5a38c-4e77-41c2-9311-c476f8785e49" name="audit-process-exit-sub-flow" />
				<flow-ref doc:name="Log Process Exit" doc:id="496dbff6-cb99-429e-8353-fa3beaf6bc4b" name="log-process-exit-sub-flow"/>
			</when>
			<otherwise >
				<set-variable value="No data matached with manifest Data" doc:name="Set Logging payload" doc:id="73dfda42-659d-4921-a9bc-59c465be1ce1" variableName="loggingPayload" />
				<flow-ref doc:name="Logging Message" doc:id="d20423f0-0f36-488f-8c33-610863117886" name="logging-sub-flow" />
			</otherwise>
		</choice>
	</flow>
	<sub-flow name="order-extract-send-to-d365" doc:id="4e4ac1cb-968c-45d1-b779-dffb242a456d" >
		<set-variable value="order-extract-send-to-d365" doc:name="Flow Name" doc:id="9300e78e-3ed3-4312-814f-a7543749e6cf" variableName="flowName"/>
		<flow-ref doc:name="Log Process Entry" doc:id="966dce08-77ce-4137-85cf-b0388e7e486b" name="log-process-entry-sub-flow"/>
		<flow-ref doc:name="Audit Process Entry" doc:id="357d8942-066b-4ce5-9b62-735760d30983" name="audit-process-entry-sub-flow"/>
		<try doc:name="Try" doc:id="b38bc115-8ef3-42c1-9bc0-3bece479be1c" >
			<http:request method="PUT" doc:name="Call D365 ODATA HTTP Request Configuration" doc:id="4e264552-d91e-4f1c-8103-e1cc181d1b0d" path="${d365.updateOrderExtractPath}" responseTimeout="${response.timeout.system.d365.orderExtract}" config-ref="s_D365_ODATA_Http_Request_configuration" outputMimeType="application/json">
			<http:headers><![CDATA[#[output application/java
---
{
	"Transaction-Id" : vars.transactionId,
	"file-name" : vars.fileName,
	"client_secret" : p('secure::d365.odata.clientSecret'),
	"Transaction-Start-Time" : vars.transactionStartTime,
	"client_id" : p('d365.odata.clientId')
}]]]></http:headers>
			<http:response-validator>
					<http:success-status-code-validator values="#[200]" />
				</http:response-validator>
		</http:request>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="9a9b11d4-5c72-4531-b7f3-25c53d72dfc3" type="ANY">
					<ee:transform doc:name="File Path" doc:id="2c88cc14-e72a-4069-97f5-5a183d60c84d">
						<ee:message>
						</ee:message>
						<ee:variables>
							<ee:set-variable variableName="orderErrorFilePath" ><![CDATA[%dw 2.0
	output application/java
	---
	p('orders.export.sftp.errorfilepath') ++ vars.fileName]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<set-variable value="#['Error received from D365, Writing order data to SFTP error folder' ++ write(vars.orderErrorFilePath,'application/json')]" doc:name="Set Variable" doc:id="934a41fd-4b71-445a-baff-e4ad81301593" variableName="loggingPayload"/>
					<flow-ref doc:name="Flow Logging Sub Flow" doc:id="d59792c0-0779-491a-b1f8-5537ce942651" name="logging-sub-flow"/>
					<until-successful maxRetries="${retry.attempts}" doc:name="Until Successful" doc:id="f57444c1-2c7d-4ee7-b0b3-660b5a49443e" millisBetweenRetries="${retry.frequency}">
						<try doc:name="Try" doc:id="3096129e-3dab-40ec-8d34-d25488e2e0cd" >
							<sftp:write doc:name="Write" doc:id="be9f36bb-3a3d-4fd8-9215-b8768f3fa18a" config-ref="SFTP_Config" path="#[vars.orderErrorFilePath]">
						</sftp:write>
							<error-handler >
								<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="2c626629-da42-4de5-a744-6bd4a97cbb41" >
									<flow-ref doc:name="log-error-sub-flow" doc:id="7bd92725-07de-4d6e-af98-832692dc16bd" name="log-error-sub-flow"/>
									<flow-ref doc:name="audit-error-sub-flow" doc:id="8a3c1c2b-d27b-437a-9a81-5c66bc2a7926" name="audit-error-sub-flow"/>
								</on-error-propagate>
							</error-handler>
						</try>
					</until-successful>
				</on-error-propagate>
			</error-handler>
		</try>
		<flow-ref doc:name="Audit Process Exit" doc:id="638fe593-58cb-4321-b924-a2a4c76fb8d0" name="audit-process-exit-sub-flow"/>
		<flow-ref doc:name="Log Process Exit" doc:id="6876b2a6-7f03-4f5d-9cc6-5105676a0b96" name="log-process-exit-sub-flow"/>
	</sub-flow>
	<flow name="receive-order-message-and-retry" doc:id="d15f90bc-9174-48aa-baa4-f1bafb4a7471" >
		<sqs:receivemessages doc:name="Receive Message From Order Queue and Retry" doc:id="6f46c1d3-03c4-48f9-a3c5-08fb02e08d6a" config-ref="Amazon_SQS_Configuration" queueUrl="${sqs.queue.url.orderQueueUrl}">
			<reconnect frequency="${retry.frequency}" count="${retry.attempts}" />
		</sqs:receivemessages>
		<set-variable value="receive-order-message-and-retry" doc:name="Flow Name" doc:id="8f2e406f-e95e-4eb4-bbca-a304697ca53a" variableName="flowName"/>
		<ee:transform doc:name="Queue Parameter" doc:id="21b4895a-5b09-420d-be47-a3b52cfe47e7" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="correlationId" ><![CDATA[%dw 2.0
output application/java
---
attributes.correlationId.stringValue]]></ee:set-variable>
				<ee:set-variable variableName="transactionStartTime" ><![CDATA[%dw 2.0
output application/java
---
attributes.transactionStartTime.stringValue
]]></ee:set-variable>
				<ee:set-variable variableName="transactionId" ><![CDATA[%dw 2.0
output application/java
---
attributes.transactionId.stringValue]]></ee:set-variable>
				<ee:set-variable variableName="count" ><![CDATA[%dw 2.0
output application/java
---
attributes.reprocessingCount.stringValue as Number + 1 ]]></ee:set-variable>
				<ee:set-variable variableName="fileName" ><![CDATA[%dw 2.0
output application/java
---
attributes.transactionFileName.stringValue]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="log Receiver Entry" doc:id="fa89010b-7d26-49c0-a637-c0181292c71f" name="log-receiver-entry-sub-flow" />
		<flow-ref doc:name="Audit Receiver Entry" doc:id="ca6c1eed-0c57-464b-bfdb-640703e452ea" name="audit-receiver-entry-sub-flow"/>
		<set-variable value="#[attributes['sqs.message.receipt.handle']]" doc:name="Set Message Receipt" doc:id="689612aa-290d-4d3a-903e-3e307415a9f0" variableName="messageReceipt"/>
		<until-successful maxRetries="${retry.attempts}" doc:name="Until Successful" doc:id="97fdc0b7-a42a-49ef-bcdd-64608cd5129f" millisBetweenRetries="${retry.frequency}">
			<try doc:name="Try" doc:id="1c3fec62-3cd7-4f11-9ffb-73857dddc603" >
				<sqs:delete-message doc:name="Delete message" doc:id="5fbd6107-613e-4978-a42d-9f4804e9e927" config-ref="Amazon_SQS_Configuration" receiptHandle="#[vars.messageReceipt]" queueUrl="${sqs.queue.url.orderQueueUrl}" target="tempDelete">
			<reconnect frequency="${retry.frequency}" count="${retry.attempts}" />
		</sqs:delete-message>
				<error-handler >
					<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="d7d748a6-5e81-402d-815e-27ae277d2907" type="ANY">
						<flow-ref doc:name="log-error-sub-flow" doc:id="340fef27-192a-474d-92a7-98a5083f96b8" name="log-error-sub-flow"/>
						<flow-ref doc:name="audit-error-sub-flow" doc:id="51e2b2e6-f18f-4082-a867-89ce5ca4c8b7" name="audit-error-sub-flow"/>
					</on-error-propagate>
				</error-handler>
			</try>
		</until-successful>
		<ee:transform doc:name="Transform Message" doc:id="6c21f267-6031-4987-9b58-3f1cd98cb520">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
read(payload,'application/json')]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="Choice" doc:id="025758d6-ccb0-4adb-8b18-6ab0989c97e3" >
			<when expression="#[vars.count &lt; p('reprocessing.attempts')]">
				<flow-ref doc:name="Reprocess Order Data " doc:id="2ebd9cda-7a36-47de-afbf-ebc59844a6f7" name="order-extract-get-manifest-data" />
			</when>
			<otherwise >
				<ee:transform doc:name="File Path" doc:id="3ad7b2a1-6342-4d8d-9af6-69fa0f58a30f">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="filePath"><![CDATA[%dw 2.0
output application/java
---
p('orders.export.sftp.errorfilepath') ++ vars.fileName]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<set-variable value="#[p('reprocessing.attempts') ++ ' times retries done, Data will be moved to SFTP folder with path ' ++ write(vars.filePath, 'application/json')]" doc:name="Set Variable" doc:id="a4379467-fb40-475f-9098-57b64415e4bf" variableName="loggingPayload"/>
				<flow-ref doc:name="Flow Logging Sub Flow" doc:id="9cde173f-469f-4a01-a72a-d66bb438266e" name="logging-sub-flow"/>
			<until-successful maxRetries="${retry.attempts}" doc:name="Until Successful" doc:id="a32b5761-33b9-45a1-a20f-a193ff508b04" millisBetweenRetries="${retry.frequency}">
					<try doc:name="Try" doc:id="7b205734-083b-4907-bccd-d03d2d05597c" >
						<sftp:write doc:name="Write" doc:id="36055cf5-d7f8-4276-9a27-bae718fd39e2" config-ref="SFTP_Config" path="#[vars.filePath]">
					</sftp:write>
						<error-handler >
							<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="829acbaf-88c2-4c16-82b9-eba3e6cf2587" >
								<flow-ref doc:name="log-error-sub-flow" doc:id="33ffa0b6-46a8-464a-bd28-719ac2aa3616" name="log-error-sub-flow"/>
								<flow-ref doc:name="audit-error-sub-flow" doc:id="fee5c513-86a1-4727-90ae-651b9cf9b29a" name="audit-error-sub-flow"/>
							</on-error-propagate>
						</error-handler>
					</try>
				</until-successful>
			</otherwise>
		</choice>
		<flow-ref doc:name="Audit Dispatcher Exit" doc:id="c52b43eb-9118-47d2-a316-ea74a52da893" name="audit-dispatcher-exit-sub-flow"/>
		<flow-ref doc:name="Log Dispatcher Exit" doc:id="b494d361-f5ce-4926-a272-b2db5105bfda" name="log-dispatcher-exit-sub-flow" />
	</flow>
	<sub-flow name="call-s-jda-http-request-sub-flow" doc:id="ca974c71-16f8-46f3-b741-61f8411b2825" >
		<set-variable value="call-s-jda-http-request-sub-flow" doc:name="Flow Name" doc:id="2c5ec5cb-4296-41cf-a763-09c85c0ae161" variableName="flowName"/>
		<flow-ref doc:name="Log Process Entry" doc:id="9540cdf4-97bf-4de7-850c-9382ceb62534" name="log-process-entry-sub-flow"/>
<flow-ref doc:name="Audit Process Entry" doc:id="d18d9ff8-9177-46b0-8e47-ace64340d10f" name="audit-process-entry-sub-flow"/>
		<http:request method="GET" doc:name="S-JDA-HTTP-Request-Configuration" doc:id="ebc28a84-3bbe-4967-bc72-2b6d590bb5c1" path="${jda.orders.path}" responseTimeout="${response.timeout.system.jda.orderExtract}" config-ref="s_jda_Http_Request_configuration" outputMimeType="application/json">
				<http:headers><![CDATA[#[output application/java
---
{
	"vRequestId" : vars.transactionId
}]]]></http:headers>
			<http:query-params><![CDATA[#[output application/java
---
{
	"client_secret" : p('secure::jda.clientSecret'),
	"client_id" : p('jda.clientId')
}]]]></http:query-params>
			
		</http:request>
		<flow-ref doc:name="Log Process Exit" doc:id="c77b01df-46d4-43a3-a6e6-362be6c5f809" name="log-process-exit-sub-flow" />
<flow-ref doc:name="Audit Process Exit" doc:id="cf89fb31-bb52-4ddf-b3c5-c47c9795f57c" name="audit-process-exit-sub-flow"/>
	</sub-flow>
	
</mule>
