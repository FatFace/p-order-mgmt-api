<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:sqs="http://www.mulesoft.org/schema/mule/sqs"
	xmlns:amqp="http://www.mulesoft.org/schema/mule/amqp"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/amqp http://www.mulesoft.org/schema/mule/amqp/current/mule-amqp.xsd
http://www.mulesoft.org/schema/mule/sqs http://www.mulesoft.org/schema/mule/sqs/current/mule-sqs.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd">
	<flow name="order-extract-impl-flow" doc:id="23a2590d-f562-46da-a911-2cf2098e8abe" initialState="stopped">
<!-- 	<http:listener doc:name="Test Listener" doc:id="4c06bde2-d4f6-487b-8db8-643daa0ddb3f" path="/test" config-ref="HTTP_Listener_config"/> -->
		<scheduler doc:name="Scheduler" doc:id="18363b90-3733-44b8-b930-913a1be28952" >
			<scheduling-strategy >
				<cron expression="${cron.expression.orderextract}" />
			</scheduling-strategy>
		</scheduler>
		<ee:transform doc:name="Batch Parameter" doc:id="02821f9f-729a-4648-b997-59abceff4329" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'order-extract-impl-flow']]></ee:set-variable>
				<ee:set-variable variableName="orderCount" ><![CDATA[0]]></ee:set-variable>
				<ee:set-variable variableName="transactionStartDate" ><![CDATA[%dw 2.0
output application/java
---
now() as String {format : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		
		<ee:transform doc:name="Audit Key" doc:id="447e8b4c-6ed6-42a4-ac56-a27de356d0e2" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="primaryKey" ><![CDATA[%dw 2.0
output application/java
---
'orderId']]></ee:set-variable>
				<ee:set-variable variableName="secondaryKey" ><![CDATA[%dw 2.0
output application/java
---
'productId']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Log Receiver Entry" doc:id="77d62498-8cc7-4855-9310-c8fd5c7897f0" name="log-receiver-entry-sub-flow" />
		<flow-ref doc:name="Audit Receiver Entry" doc:id="bae2eaf2-a4d8-4332-b476-870c31df3ae1" name="audit-receiver-entry-sub-flow"/>
		<flow-ref doc:name="call-s-jda-and-process-to-d365-impl-flow" doc:id="cc7dd770-911a-4451-8cc8-59819183625b" name="call-s-jda-and-process-to-d365-impl-flow"/>
		<flow-ref doc:name="Log Dispatcher Exit" doc:id="986bce07-fd29-46df-a2b5-8f370e86bb0f" name="log-dispatcher-exit-sub-flow"/>
		<flow-ref doc:name="Audit Dispatcher Exit" doc:id="bec990dc-8b03-4813-955c-422c63eecb9f" name="audit-dispatcher-exit-sub-flow"/>
	</flow>
	<flow name="call-s-jda-and-process-to-d365-impl-flow" doc:id="586a59a6-47ab-44e1-b530-8afc050bbc93" >
		<ee:transform doc:name="Flow Name" doc:id="c245b3ff-0f13-4be7-aecc-589ea8c46bfa" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'call-s-jda-and-process-to-d365-impl-flow']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Log Process Entry" doc:id="7def573e-e35e-4f59-b8f5-61a7b3ec94c3" name="log-process-entry-sub-flow" />
		<http:request method="GET" doc:name="S-JDA-HTTP-Request-Configuration" doc:id="2e2372df-6ccb-4ab2-9c51-ce66f3740184" path="${jda.orders.path}" responseTimeout="${response.timeout}" config-ref="s_jda_Http_Request_configuration" outputMimeType="application/json">
				<http:headers ><![CDATA[#[output application/java
---
{
	"vRequestId" : vars.transactionId
}]]]></http:headers>
			<http:query-params ><![CDATA[#[output application/java
---
{
	"client_id" : p('jda.clientId'),
	"client_secret" : p('jda.clientSecret')
}]]]></http:query-params>
		</http:request>
		<flow-ref doc:name="Log Process Exit" doc:id="4cdb440a-5b24-49c1-b372-f37092e1fe01" name="log-process-exit-sub-flow"/>
		
		<set-variable value="#[attributes.headers['has-more-files']]" doc:name="Set Has More Files" doc:id="1fa39fcf-a8cf-4e9a-b0fa-687bd5c36751" variableName="hasMoreFiles"/>
		<choice doc:name="Choice" doc:id="1d575d75-492e-4e7c-b28d-dd96cbf8a864" >
			<when expression="#[payload != null and payload.orders != []]">
				<flow-ref doc:name="Flow Reference to Order Extract Check Manifest Data" doc:id="c1d2c83f-4e82-4c91-8100-9d093f42b861" name="order-extract-check-manifest-data-sub-flow"/>
			</when>
			<otherwise>
				<set-variable value="There are no order data to process" doc:name="Set Logging Payload" doc:id="d851938f-e129-41c0-b5ed-4ae9205905ab" variableName="loggingPayload" />
				<flow-ref doc:name="Logging Message" doc:id="12acbf38-f6ce-4203-ac75-b499b5b35fa4" name="logging-sub-flow"/>
			</otherwise>
		</choice>
		<choice doc:name="Choice" doc:id="0af6e8e1-cb61-4991-854f-f88169c6946a">
			<when expression="#[vars.hasMoreFiles == 'true']">
				<flow-ref doc:name="call-s-jda-and-process-to-d365-impl-flow" doc:id="9aee2451-507f-4599-ba8f-86835f0b407e" name="get-manifest-shipment-data-from-jda-and-process-to-d365-sub-flow" />
			</when>
			<otherwise>
				<set-variable value="There are no more manifest extract files to process" doc:name="Set Logging Payload" doc:id="cca705f5-3f2e-4eda-8876-505b9cb4fc35" variableName="loggingPayload" />
				<flow-ref doc:name="Logging Message" doc:id="2f4ea948-7ce7-483e-ac6b-dd9e72a7252c" name="logging-sub-flow"/>
			</otherwise>
		</choice>
	</flow>
	<sub-flow name="order-extract-check-manifest-data-sub-flow" doc:id="e36f7652-4cb0-405b-afd5-1d5835291f83" >
		<ee:transform doc:name="Flow Name" doc:id="2fb85c39-71f1-4fdc-a4dc-fc939f6162e9" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'order-extract-check-manifest-data-sub-flow']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Log Process Entry" doc:id="6878a8c4-14bb-4fc2-b1ab-539e6000a284" name="log-process-entry-sub-flow" />
		<ee:transform doc:name="Set Queue Variables" doc:id="f140519b-f4cc-4c4c-9e1c-fac0e1cdae2b">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="targetQueueVar"><![CDATA[%dw 2.0
output application/java
---
p('sqs.queue.target.order')]]></ee:set-variable>
				<ee:set-variable variableName="targetQueueUrl"><![CDATA[%dw 2.0
output application/java
---
p('sqs.queue.url.orderQueueUrl')]]></ee:set-variable>
				<ee:set-variable variableName="sendToQueue" ><![CDATA[%dw 2.0
output application/java
---
p('send.order.queue')]]></ee:set-variable>
			</ee:variables>
			
		</ee:transform>
		<ee:transform doc:name="Filtering" doc:id="3a23d39e-deaf-4e03-ab52-a34254baa3a7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	orders: payload.orders filter ($."order-no" != null and $."order-no" != '' and $.status == 'shipped') map $
}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="c72d933e-7050-4325-8357-b152854dfac2">
			<when expression="#[payload.orders != []]">
				<flow-ref doc:name="Flow Reference Get Manifest Data" doc:id="428e84de-f365-4349-9386-e92167cbf7b8" name="order-extract-get-manifest-data"/>
				
			</when>
			
			<otherwise>
				<set-variable value="The record is not an ecom order" doc:name="Set Logging payload" doc:id="aace8a5b-63c6-4cb2-ade2-0323bb3f144b" variableName="loggingPayload" />
				<flow-ref doc:name="Logging Message" doc:id="95a6a3de-d35f-4e7e-943f-01591f2f99e7" name="logging-sub-flow" />
			</otherwise>
			
		</choice>
		<flow-ref doc:name="Log Process Exit" doc:id="c998d439-0d54-4905-bad3-273c74dbd509" name="log-process-exit-sub-flow" />
	</sub-flow>
	<sub-flow name="order-extract-get-manifest-data" doc:id="fb474105-bef1-40e7-834f-e728f8fb1d7a" >
		<ee:transform doc:name="Flow Name" doc:id="840b0cee-d408-4dc1-8ac5-d6db5b0b99ce" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/java
---
'order-extract-get-manifest-data']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Log Process Entry" doc:id="74097f4e-cd07-44e1-8bdb-3a6695a79691" name="log-process-entry-sub-flow" />
		<sqs:read doc:name="Read" doc:id="9fe81df9-a3bb-435a-b921-f391fffa8dd5" config-ref="Amazon_SQS_Configuration" queueUrl="#[vars.targetQueueUrl]" maxNumberOfMessages="8" target="manifestData">
			<reconnect frequency="${retry.frequency}" count="${retry.attempts}"/>
		</sqs:read>
		<choice doc:name="Choice" doc:id="e84144a6-44ff-4e08-8268-7ba143b34c0d" >
			<when expression="#[payload != null]">
				<ee:transform doc:name="Transform Message" doc:id="a97d5f0c-3a47-45ae-9428-b2152ff8adca" >
					<ee:message >
						<ee:set-payload resource="dwl/filteredOrder.dwl" />
					</ee:message>
					<ee:variables >
						<ee:set-variable resource="dwl/matchedOrderData.dwl" variableName="matchedOrderData" />
					</ee:variables>
				</ee:transform>
				<choice doc:name="Choice" doc:id="7b07bbac-a441-4f75-acca-1444d95908e1" >
					<when expression="#[vars.matchedOrderData != null and vars.matchedOrderData.orders != []]">
						<ee:transform doc:name="Transform Message" doc:id="5f7c4ef1-3a24-4ae4-af37-92ac35fc04f2" >
							<ee:message >
								<ee:set-payload resource="dwl/create-order-queue-msg.dwl" />
							</ee:message>
						</ee:transform>
						<choice doc:name="Choice" doc:id="5e78b28d-c018-4cb6-ac21-8d73cfb23938" >
							<when expression="#[vars.orderCount == 8]">
								<sftp:write doc:name="Write" doc:id="fb2769fe-047a-4b6a-9bae-8f890c9b68fe" config-ref="SFTP_Config" path="${orders.export.sftp.errorfilepath}">
									<sftp:content ><![CDATA[#[vars.matchedOrderData]]]></sftp:content>
								</sftp:write>
							</when>
							<otherwise >
								<sqs:send-message doc:name="Send message" doc:id="e3c3f7a7-6559-418d-aa11-b690db70a793" config-ref="Amazon_SQS_Configuration" queueUrl="#[vars.targetQueueUrl]">
						</sqs:send-message>
							</otherwise>
						</choice>
					</when>
					<otherwise >
						<set-variable value="No data matached with manifest Data" doc:name="Set Logging payload" doc:id="db1f4ae4-3344-4574-831c-203ac517cc70" variableName="loggingPayload" />
				<flow-ref doc:name="Logging Message" doc:id="a4cf82c1-8519-48db-9263-cad23b7cfc5f" name="logging-sub-flow" />
					</otherwise>
				</choice>
			</when>
			<otherwise >
				<set-variable value="The record is not an ecom order" doc:name="Set Logging payload" doc:id="73320de0-0bc3-4493-8fe6-27cb1e9777fb" variableName="loggingPayload" />
				<flow-ref doc:name="Logging Message" doc:id="648243e9-2db8-4a80-9518-de124bcc936c" name="logging-sub-flow" />
			</otherwise>
		</choice>
		<ee:transform doc:name="Transform order extract To D365" doc:id="4475089e-4483-4d0f-998d-02f9a670bb78">
			<ee:message>
						<ee:set-payload resource="dwl/order-extract-jda-to-d365-mapping.dwl" />
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="Flow Reference send to d365" doc:id="9691c83f-6d2f-480d-b302-4adb884962ed" name="order-extract-send-to-d365" />
		<flow-ref doc:name="Log Process Exit" doc:id="c330e731-9780-48c2-b596-be1e7effebcc" name="log-process-exit-sub-flow" />
	</sub-flow>
	<sub-flow name="order-extract-send-to-d365" doc:id="4e4ac1cb-968c-45d1-b779-dffb242a456d" >
		<flow-ref doc:name="Log Process Entry" doc:id="50abbf14-8e27-4ba9-b3e0-e776e7c7f8f9" name="log-process-entry-sub-flow" />
				<http:request method="PUT" doc:name="Call D365 HTTP Request Configuration" doc:id="4e264552-d91e-4f1c-8103-e1cc181d1b0d" path="${d365.updateOrderExtractPath}" responseTimeout="${response.timeout}" config-ref="s_D365_Http_Request_configuration">
				
				<http:body ><![CDATA[#[vars.originalPayload]]]></http:body>
						<http:headers ><![CDATA[#[output application/java
---
{
	"Transaction-Id" : vars.transactionId,
	"Transaction-Start-Time" : vars.transactionStartDate,
	"Client-Id" : p('d365.clientId'),
	"Client-Secret" : p('d365.clientSecret')
}]]]></http:headers>
			<http:response-validator>
					<http:success-status-code-validator values="#[200]" />
				</http:response-validator>
		</http:request>
			<flow-ref doc:name="Log Process Exit" doc:id="f51ef891-c345-4662-be6a-f444b1dd34f5" name="log-process-exit-sub-flow" />
	</sub-flow>
		<flow name="receive-order-message-and-retry" doc:id="1a6a1d78-904d-4d4a-9f75-9cb53713fbfc" >
		<sqs:receivemessages doc:name="Receive Message From Order Queue and Retry" doc:id="9fdd5012-3be6-4c64-a3c6-11edc46a80aa" config-ref="Amazon_SQS_Configuration" queueUrl="${sqs.queue.url.orderQueueUrl}"/>
		<set-variable value="receive-manifest-message-and-retry" doc:name="Flow Name" doc:id="c45659a1-f003-4182-b7f7-721f14617a45" variableName="flowName"/>
		<ee:transform doc:name="Queue Parameter" doc:id="17c20d97-f46e-4654-ad9b-1b696ccb4c7f" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="correlationId" ><![CDATA[%dw 2.0
output application/java
---
attributes.correlationId.stringValue]]></ee:set-variable>
				<ee:set-variable variableName="transactionStartTime" ><![CDATA[%dw 2.0
output application/java
---
attributes.transactionStartTime.stringValue
]]></ee:set-variable>
				<ee:set-variable variableName="transactionId" ><![CDATA[%dw 2.0
output application/java
---
attributes.transactionId.stringValue]]></ee:set-variable>
				<ee:set-variable variableName="count" ><![CDATA[%dw 2.0
output application/java
---
attributes.orderCount.stringValue as Number + 1 ]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="log Receiver Entry" doc:id="76b689a0-a28f-42c3-a83c-f54b9733933c" name="log-receiver-entry-sub-flow" />
		<flow-ref doc:name="Log Process Entry" doc:id="6d734da2-a9f1-4823-b21a-9780eb84c6c4" name="log-process-entry-sub-flow"/>
		<flow-ref doc:name="Audit Process Entry" doc:id="1627e4cb-058a-426d-9739-39adeea45f91" name="audit-process-entry-sub-flow"/>
		<set-variable value="#[attributes['sqs.message.receipt.handle']]" doc:name="Set Message Receipt" doc:id="3ce71f45-b4ce-48de-af7e-66eb6714d227" variableName="messageReceipt"/>
		<async doc:name="Async" doc:id="9983bf7f-1e5e-4f3e-95d0-8742638c8b59">
					<flow-ref doc:name="order-extract-get-manifest-data" doc:id="a17b2a4a-6aa4-41ea-9a1c-54a37383340d" name="order-extract-get-manifest-data" />
				</async>
		<sqs:delete-message doc:name="Delete message" doc:id="2de490be-a0bd-450d-9438-4c37e02235fe" config-ref="Amazon_SQS_Configuration" receiptHandle="#[vars.messageReceipt]" queueUrl="${sqs.queue.url.orderQueueUrl}" />
		<flow-ref doc:name="Audit Process Exit" doc:id="800441a6-23a5-4388-8fb2-cb5591601a8e" name="audit-process-exit-sub-flow"/>
		<flow-ref doc:name="Log Process Exit" doc:id="23cdb3a1-8d81-4f3a-9f59-a2da2e15a87a" name="log-process-exit-sub-flow" />
		
	</flow>
</mule>
