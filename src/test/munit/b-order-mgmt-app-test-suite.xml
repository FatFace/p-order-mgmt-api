<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="b-order-mgmt-app-test-suite.xml" />
	<import doc:name="Import" doc:id="bbe30bef-41b9-4c4a-bb95-610cfd061704" file="common-auditing-framework.xml" />
	<import doc:name="Import" doc:id="e9fb0335-c7e1-4bdc-8177-68adb8cc524d" file="common-error-handling.xml" />
	<import doc:name="Import" doc:id="7f1989e8-370a-4d72-be49-ff4ed16eab15" file="common-logging-framework.xml" />
	<import doc:name="Import" doc:id="0a0fcdc9-a992-49c9-99dd-bce0944e4b95" file="globals.xml" />
	<import doc:name="Import" doc:id="5ace4578-96b3-48ea-8aa9-3646414d7b15" file="order-managment-app.xml" />
	<munit:test name="order-managment-app-success-test-suiteTest" description="MUnit Test" doc:id="8e28a24a-3ff4-4efa-8b59-1e11c815735f" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Scheduler" doc:id="021a31fb-cbdc-4b90-a309-0e03787ab31d" processor="http:listener">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="Listener" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Target D365 Call" doc:id="a2f3447e-fad1-46e2-8195-63d0b3cc39a0" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="Invoke System Layer D365 Api to Get Pic Orders" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="originalPayload" value="#[MunitTools::getResourceAsString('response/pick_orders_d365_success_response_json.json')]" mediaType="application/json" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock DBLookup Api" doc:id="a4192c6e-ee7e-4e41-b6e2-09b38d4c4189" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="Invoke System Layer Lookup Api to Get Lookup Key" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response/dblookup_response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Target JDA Call" doc:id="40c6cf9d-1140-4c95-8eb6-96cfb7556870" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="Invoke System Layer JDA Api to Post Orders" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response/jda_reponse.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="order-managment-app-flow" doc:id="2567d56f-ea43-49f2-ad43-901cb5680d4d" name="order-managment-app-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="1b0aaa64-17c5-4c3d-bb5b-11f87a889049" expression="#[payload.status]" is='#[MunitTools::containsString("success")]'/>
		
</munit:validation>
	</munit:test>
	<munit:test name="order-managment-app-empty-payload-test-suiteTest" description="MUnit Test" doc:id="3266a28f-a65b-41d8-98c6-06938b0498d2">
			<munit:behavior>
				<munit-tools:mock-when doc:name="Mock Scheduler" doc:id="21faaed3-1372-4251-b710-c8c5ad7749da" processor="http:listener">
					<munit-tools:with-attributes>
						<munit-tools:with-attribute attributeName="doc:name" whereValue="Listener" />
					</munit-tools:with-attributes>
				</munit-tools:mock-when>
				<munit-tools:mock-when doc:name="Mock Target D365 Call" doc:id="c07ad655-a1de-41d8-b332-897ce0be79b8" processor="http:request">
					<munit-tools:with-attributes>
						<munit-tools:with-attribute attributeName="doc:name" whereValue="Invoke System Layer D365 Api to Get Pic Orders" />
					</munit-tools:with-attributes>
					<munit-tools:then-return>
						<munit-tools:variables>
						</munit-tools:variables>
					</munit-tools:then-return>
				</munit-tools:mock-when>
			</munit:behavior>
			<munit:execution>
				<flow-ref doc:name="order-managment-app-flow" doc:id="da17324f-9e3f-4880-8912-60c08188f432" name="order-managment-app-flow" />
			</munit:execution>
			<munit:validation>
				<munit-tools:assert-that doc:name="Assert that" doc:id="280ddfb8-1d24-45dc-b918-5060861932d2" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
			</munit:validation>
		</munit:test>
</mule>
