<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="pick-orders-test-suite.xml" />
	<import doc:name="Import" doc:id="c0742357-759b-4b0f-8d60-70afb6b89cdd" file="test-globals-suite.xml" />
	<munit:test name="pick-orders-test-suite-order-managment-app-flowTest" description="Test" doc:id="24b31562-c826-48be-b984-1098b0792dcf" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Lookup Api System Layer Call" doc:id="e41ed56e-b0d9-47de-821b-b10043be3d8a" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke System Layer Lookup Api to Get Lookup Key" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response/dblookup_response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy" doc:id="9c16f388-f67f-4eeb-ba7d-4aa47f986d10" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke System Layer Lookup Api to Get Lookup Key" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:after-call >
					<set-variable value="#['1']" doc:name="Set Variable" doc:id="75ff854a-749f-45a3-8feb-8251633aebc3" variableName="lookup" mimeType="application/json" />
					<munit-tools:assert-equals doc:name="Assert equals" doc:id="48044ceb-3e79-47c2-ab4f-e0df4fb63483" actual="#[output application/java --- write(payload.lookups[0].'lookup_id' , 'application/java')]" expected="#[output application/java --- write(vars.lookup , 'application/java')]" />
				</munit-tools:after-call>
			</munit-tools:spy>
			<munit-tools:mock-when doc:name="Mock JDA Api System Layer Call" doc:id="3ce12728-4f9c-4fda-a83d-939ffafd4aef" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke System Layer JDA Api to Post Orders" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response/jda_reponse.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy" doc:id="1f26a626-7f3f-473a-93d2-777aea8bd2a1" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke System Layer JDA Api to Post Orders" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<set-variable value="#['13298']" doc:name="Set Variable" doc:id="23784fe7-f80e-4843-88a5-0fba8871ecda" variableName="pickid" mimeType="application/json" />
					<munit-tools:assert-equals doc:name="Assert equals" doc:id="a7e49bbc-0d2f-44d0-a1fc-37225130c0ca" actual="#[output application/java --- write(payload.orders[0].'pick-id' , 'application/java')]" expected="#[output application/java --- write(vars.pickid , 'application/java')]" />
				</munit-tools:before-call>
			</munit-tools:spy>
		</munit:behavior>
		<munit:execution >
			<set-payload value="#[MunitTools::getResourceAsString('request/pick-orders-success-request.json')]" doc:name="Set Payload" doc:id="03142d3a-3e28-44c3-98cb-a51e791be1a5" mimeType="application/json"/>
			<munit-tools:verify-call doc:name="Verify call" doc:id="00421841-db5a-49bc-95cc-ae356c3cb095" processor="http:request" atLeast="#[0]">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke System Layer JDA Api to Post Orders" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<flow-ref doc:name="order-managment-impl-flow" doc:id="2f4a9a9d-4524-4598-a4b9-53485a71f55c" name="order-managment-impl-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="2515fc31-9e5b-4548-987c-fc16ba21f4c0" expression="#[payload.status]" is="#[MunitTools::equalTo('success')]"/>
		</munit:validation>
	</munit:test>
	
	<munit:test name="pick-orders-test-suite-order-managment-app-failure-flow" description="Test" doc:id="43fe496f-dc6d-456a-b7e6-3b4e46ce31c5">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Lookup Api System Layer Call" doc:id="ea173c9f-0c9a-4fa0-9491-f322a4224fed" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke System Layer Lookup Api to Get Lookup Key" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response/dblookup_response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock JDA Api System Layer Call" doc:id="8cb2ee18-f436-4665-87e2-8e4dd18759ec" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke System Layer JDA Api to Post Orders" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response/jda_reponse.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<set-payload value="#[MunitTools::getResourceAsString('request/pick-orders-failure-request.json')]" doc:name="Set Payload" doc:id="94022b40-9537-41a9-8483-f9c19dd346c1" mimeType="application/json"/>
			<flow-ref doc:name="order-managment-impl-flow" doc:id="478d1d44-79a6-40fb-a157-e29f612570ef" name="order-managment-impl-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="dde8e350-6dc1-43fe-b48a-5257e77c5ec2" expression="#[vars.loggingPayload]" is="#[MunitTools::equalTo('No data received')]"/>
		</munit:validation>
	</munit:test>
	
	<munit:test name="pick-orders-scheduler-test-flow" description="MUnit Test" doc:id="c6370eb0-8069-4561-8820-25902d509e45">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Scheduler" doc:id="3f63512b-2bad-44bf-9240-e55e9583a35f" processor="scheduler">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Scheduler" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock d365 System Layer Call" doc:id="ebf4a23f-2643-4fb4-9734-98d1b796f4c1" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke D365 System Layer" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="pick-orders-trigger-flow" doc:id="559f82e8-f6e9-4c26-b8f1-6d0c342e0998" name="pick-orders-trigger-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="62572a4e-59a5-4763-8e90-e65ecd3a856f" expression="#[payload]" is="#[MunitTools::equalTo('')]"/>
		</munit:validation>
	</munit:test>
	
	

</mule>
