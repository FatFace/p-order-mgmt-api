<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="transfers-shipped-orders-test-suite.xml" />
	<import doc:name="Import" doc:id="3aad567e-6362-40f2-a9fc-f6c0f7a8a640" file="test-globals-suite.xml" />
	<munit:test name="transfers-shipped-orders-test-suite-put-transfers-shipped-orders-impl-flowTest" description="Test" doc:id="e0415cfc-1bbe-4413-b253-b8c72d09ce74" timeOut="12000000">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when DB Lookup Api" doc:id="7987ebdd-1748-494c-8e5f-3f07aec8b493" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke System Layer Lookup Api to Get Lookup Key" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="lookupResponse" value="#[MunitTools::getResourceAsString('response/dblookup_response.json')]" mediaType="application/json" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Invoke D365 System Layer" doc:id="568db453-cd62-4c4b-a434-969f9670341e" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Invoke D365 System Layer" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:attributes value='#[{"httpStatus" : 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="00cf618c-1b5f-4914-b296-1749809b6db7" >
				<munit:payload value="#[MunitTools::getResourceAsString('request/transfer-shipped-orders-request.json')]" mediaType="application/json" />
				<munit:attributes value='#[{"headers" :  {"has-more-files":"false","file-name":"testFile"}}]' />
				<munit:variables >
					<munit:variable key="messageCorrelationId" value="testCorrelation" mediaType="application/java" />
					<munit:variable key="transactionStartTime" value="2020-02-17T17:17:05.899Z" mediaType="application/java" />
				</munit:variables>
			
		</munit:set-event>
			<flow-ref doc:name="Flow-ref to put-transfers-shipped-orders-impl-flow" doc:id="b48298fc-cf65-46e0-979d-37e9e7472a6e" name="put-transfers-shipped-orders-impl-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that payload" doc:id="d3b593f8-709a-405d-90e2-8c939a45ce12" is="#[MunitTools::notNullValue()]" expression="#['success']"/>
		</munit:validation>
	</munit:test>

</mule>
